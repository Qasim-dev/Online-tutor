{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Online Tutor",
    "description": "Online tutor search application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Online Tutor",
      "description": "API for Online Tutor"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "JWT": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user in system",
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Create new user in system",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "security": {
          "Bearer": []
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "parameters": [
        {
          "name": "bookId",
          "in": "path",
          "required": true,
          "description": "ID of book that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book with given ID",
        "responses": {
          "200": {
            "description": "Book is found",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete book with given ID",
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "Book is deleted",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      },
      "put": {
        "summary": "Update book with give ID",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "description": "Book with new values of properties",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book is updated",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "required": [
        "email",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        }
      }
    },
    "Books": {
      "type": "array",
      "$ref": "#/definitions/Book"
    }
  }
}